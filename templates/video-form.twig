{% extends 'toolbar.twig' %}

{% block breadcrumb %}
{{ parent() }}
<a href="{{ skill_url }}">{{ skill.getName() }}</a> &gt;
{% if not video.isNew() %}<a href="{{ manage_videos_url }}">{{ trans('manage-videos') }}</a> &gt;{% endif %}
{{ trans('heading') }}
{% endblock %}

{% block main %}
<h2>{{ trans('heading') }}</h2>

<form class="form-horizontal" action="{{ global.locations.uri }}" method="post" id="form">
<input type="hidden" name="filename" id="filename">
<input type="hidden" name="provider_id" id="provider_id">
<input type="hidden" name="provider" id="provider">
<input type="hidden" name="player_url" id="player_url">
<input type="hidden" name="width" id="width">
<input type="hidden" name="height" id="height">
<input type="hidden" name="poster_url" id="poster_url">

	<div class="form-group{% if not video.isNew() %} hidden{% endif %}">
		<label class="col-sm-2 control-label">{{ trans('type') }}</label>
		<div class="col-sm-3">
			<label class="radio-inline"><input type="radio" name="type" value="upload"{% if not video.getReference() %} checked{% endif %}> {{ trans('upload') }}</label>
		</div>

		<div class="col-sm-3">
			<label class="radio-inline"><input type="radio" name="type" value="reference"{% if video.getReference() %} checked{% endif %}> {{ transchoice('reference', 1) }}</label>
		</div>
	</div>

	<fieldset id="upload-group">
		<legend>{{ trans('upload') }}</legend>

		<div class="row upload-box">
			<label class="control-label control-label-top col-md-2">{{ trans('file') }}</label>
			<div class="col-md-6 clearfix">
				<span class="btn btn-success fileinput-button">
					<i class="glyphicon glyphicon-plus"></i>
					<span>{{ trans('select-file') }}...</span>
					<input id="fileupload" type="file" name="file">
				</span>
				<span id="uploaded"></span>
				<div id="progress" class="progress hidden"><div class="progress-bar progress-bar-success"></div></div>
			</div>
		</div>
	</fieldset>
	
	<fieldset id="reference-group">
		<legend>{{ transchoice('reference', 1) }}</legend>
		
		<div class="form-group" id="url-group">
			<label class="col-sm-2 control-label" for="url">{{ trans('url') }}</label>
			<div class="col-sm-6">
				<input type="text" class="form-control" id="url" name="url" value="{{ video.getReference().getUrl() }}" {% if video.isNew() %} data-fetch="yes"{% endif %}>
			</div>
			<div class="col-md-4 hidden" id="fetching">
				<span class="glyphicon glyphicon-refresh spin" aria-hidden="true"></span>
				fetching...
			</div>
		</div>
		
		<div class="form-group fetch" id="lastchecked-group">
			<label class="col-sm-2 control-label" for="lastchecked">{{ trans('lastchecked') }}</label>
			<div class="col-sm-6">
				<input type="text" class="form-control" id="lastchecked" name="lastchecked" value="{{ video.getReference().getLastchecked('d.m.Y') }}">
			</div>
		</div>
		
		<div class="form-group fetch" id="year-group">
			<label class="col-sm-2 control-label" for="year">{{ trans('year') }}</label>
			<div class="col-sm-6">
				<input type="text" class="form-control" id="year" name="year" value="{{ video.getReference().getYear() }}">
			</div>
		</div>
		
		<div class="form-group fetch" id="author-group">
			<label class="col-sm-2 control-label" for="author">{{ trans('author') }}</label>
			<div class="col-sm-6">
				<input type="text" class="form-control" id="author" name="author" value="{{ video.getReference().getAuthor() }}">
				<small class="help-block">{{ trans('person-help') }}</small>
			</div>
		</div>
		
		<div class="form-group fetch" id="publisher-group">
			<label class="col-sm-2 control-label" for="publisher">{{ trans('publisher') }}</label>
			<div class="col-sm-6">
				<input type="text" class="form-control" id="publisher" name="publisher" value="{{ video.getReference().getPublisher() }}">
				<small class="help-block">{{ trans('publisher-help') }}</small>
			</div>
		</div>
	</fieldset>
	

	<fieldset class="fetch">
		<legend>{{ transchoice('video', 1) }}</legend>
	
		<div class="form-group">
			<label class="col-sm-2 control-label" for="title">{{ trans('title') }}</label>
			<div class="col-sm-6">
				<input type="text" class="form-control" id="title" name="title" required value="{{ video.getTitle() }}">
			</div>
		</div>
		
		<div class="form-group">
			<label class="col-sm-2 control-label" for="description">{{ trans('description') }}</label>
			<div class="col-sm-6">
				<textarea class="form-control" id="description" name="description">{{ video.getDescription() }}</textarea>
			</div>
		</div>
		
		<div class="form-group">
			<label class="col-sm-2 control-label" for="movender">{{ sport.getMovender() }}</label>
			<div class="col-sm-6">
				<input type="text" class="form-control" id="movender" name="movender" required value="{{ video.getMovender() }}">
			</div>
		</div>
		
		<div class="form-group">
			<label class="col-sm-2 control-label" for="movender">{{ transchoice('tutorial', 1) }} ?</label>
			<div class="col-sm-6">
				<label class="radio-inline"><input type="radio" name="tutorial" value="1"{% if video.getIsTutorial() %} checked{% endif %}>{{ trans('yes')|capitalize }}</label>
				<label class="radio-inline"><input type="radio" name="tutorial" value="0"{% if not video.getIsTutorial() %} checked{% endif %}>{{ trans('no')|capitalize }}</label>
			</div>
		</div>
	</fieldset>
	
	<div class="form-group fetch">
		<div class="col-sm-6 col-sm-offset-2">
			<input type="submit" id="submit" class="btn btn-primary form-control" value="{{ trans('save') }}">
		</div>
	</div>
	
	<script>
	var lastFile = null;
	$('#fileupload').fileupload({
		url: '{{ api_url }}gossi.trixionary/upload',
		dataType: 'json',
		acceptFileTypes: /(\.|\/)(mp4|mov)$/i,
		done: function (e, data) {
			lastFile = data.result.files[0];
			if (lastFile.error) {
				$('#uploaded').text(lastFile.error).addClass('text-danger');
			} else {
				$('#uploaded').text(lastFile.name).removeClass('text-danger');
				$('#filename').val(lastFile.name);
				$('#submit').removeAttr('disabled');
			}
			$('#progress').addClass('hidden');
			$('#fileupload').val('');
		},
		progressall: function (e, data) {
			var progress = parseInt(data.loaded / data.total * 100, 10);
			$('#progress .progress-bar').css(
				'width',
				progress + '%'
			);
		}
	}).on('fileuploadadd', function (e, data) {
		if (lastFile !== null && data.files[0].name !== lastFile.name) {
			var xhr = new XMLHttpRequest();
			xhr.open(lastFile.deleteType, lastFile.deleteUrl, true);
			xhr.send();
			$('#filename').val('');
			$('#submit').attr('disabled');
		}
		$('#progress').removeClass('hidden');
	});

	var required = ['year', 'author', 'publisher', 'howpublished'];
	var uploadGroup = document.getElementById('upload-group');
	var referenceGroup = document.getElementById('reference-group');
	var url = document.getElementById('url');
	var urlDump;
	var enableForm = function() {
		$('.fetch').each(function () {
			$(this).removeClass('hidden');
		});
		$('#form').removeAttr('disabled');
	};
	var disableForm = function() {
		if ($('#form').is('[disabled]')) {
			return;
		}
		$('.fetch').each(function () {
			$(this).addClass('hidden');
		});
		$('#form').attr('disabled');
	}
	var toggleView = function(show) {
		if (show == 'upload') {
			referenceGroup.classList.add('hidden');
			uploadGroup.classList.remove('hidden');

			required.forEach(function (t) {
				$('#' + t).removeAttr('required');
			});
		} else {
			referenceGroup.classList.remove('hidden');
			uploadGroup.classList.add('hidden');

			required.forEach(function (t) {
				$('#' + t).attr('required');
			});

			if ($(url).is('[data-fetch]')) {
				disableForm();
			}
		}
	};
	var switches = document.getElementsByName('type');
	var view = '';
	for (var i = 0; i < switches.length; i++) {
		switches[i].addEventListener('change', function(e) {
			toggleView(e.target.value);
		}, false);
		if (switches[i].checked) {
			view = switches[i].value; 
		}
	}
	url.addEventListener('focus', function(e) {
		urlDump = url.value;
	}, false);
	url.addEventListener('blur', function(e) {
		if (url.value && url.value != urlDump) {
			disableForm();
			
			$('#fetching').removeClass('hidden');
			$.ajax({
				url: "{{ fetch_url }}?url=" + url.value,
				type: "GET",
				dataType: "json",
				success: function (json) {
					for (p in json) {
						var input = document.getElementById(p);
						if (input) {
							input.value = json[p];
						}
					}
					$(url).removeAttr('data-fetch');

					if (json['provider']) {
						var publisher = json['provider'].charAt(0).toUpperCase() + json['provider'].substr(1);			
						document.getElementById('publisher').value = publisher;
					}
					var now = new Date();
					document.getElementById('lastchecked').value = now.getDate() + '.' + (now.getMonth() + 1)  + '.' + now.getFullYear();
				},
				complete: function () {
					enableForm();
					$('#fetching').addClass('hidden');
				}
			});
		}
	}, false);

	toggleView(view);
	</script>
</form>
{% endblock %}